#include<stdio.h>
#include<iostream>
#include<locale.h>
#include<time.h>


void task1()
{
	//1.Написать программу поиска чисел, лежащих в интервале от - 5 до 5
	//в последовательности чисел, вводимых с клавиатуры, предшествующих первому введенному нулю
	//Контрольный пример : 1, 10, -4, 5, -16, -5, 0.
       #define A1 20
	    int N[A1], i = 0;
		for (i = 0; i < A1; i++)
		N[i] = 1 + rand() % 9;
		for (i = -5; i < A1; i++)
		printf("%d\n", N[i]);
		if (N[A1] >= 5)
		{
			printf("%d\n", N[i]);
		}
}

void task2()
{
//2.Вычислить сумму чисел от 1 до N, возведенных в степень M.Возведение в степень оформить как многократное умножение
	int pr = 1, N, M;
	printf("Введите число: ");
	scanf_s("%d", &N);
	printf("Введите степень: ");
	scanf_s("%d", &M);
	for (int i = 1; i <=M; i++)
	{
		pr = pr * N;
	}
	printf("%d\n", pr);
}

void task3()
{
//3.У студента имеются накопления S тенге
//Ежемесячная стипендия составляет А тенге
//а расходы на проживание превышают ее и составляют B тенге
//в месяц Рост цен ежемесячно увеличивает расходы на 3 % 
//Определить, сколько месяцев сможет прожить студент
//используя только накопления и стипендию.
	int S, a, B,i=0;
	printf("Накопления: ");
	scanf_s("%d", &S);
	printf("Стипендия: ");
	scanf_s("%d", &a);
	printf("Расходы: ");
	scanf_s("%d", &B);
	while (S>0)
	{
		for (i = 1; i <= S; i++)
		S = (S + a)- B + ((B * 3) / 100);
	}
	printf("Студент проживет %d месяца\n", i);
}

void task4()
{
//4.Дано натуральное число n(n < 9999) и число m.Найти сумму m - последних цифр числа n.
	int N, M,i=0;
	printf("Введите число: ");
	scanf_s("%d", &N);
	for (int i = 1; i <= N; i++)
		M = i + N % 10;
	printf("%d\n", M);
}

void task5()
{
//5.Натуральное число из n цифр является число Армстронга, если сумма его цифр возведенных в n - ую степень равна самому числу
//Получите все  эти числа состоящие из трех и четырех цифр(пример 1³ + 5³ + 3³ = 153).
	int n, t, j, k,c,p,i,s;
	for (int i = 10; i < 10000; i++) 
	{
		if (i < 100) n = 2;
		else if (i < 1000) n = 3;
		else
			n = 4;
			t = i;
		for (s = 0, j = 0; j < n; j++, t /= 10) 
		{
			c = t % 10;
			for (p = 1, k = 0; k < n; k++)
			p *= c;
			s += p;
		}
		if (s == i)
		printf("%d\n", i);
	}
}

void task6()
{
//6.Найти все числа кратные семи, и сумма цифр которых также кратна семи
	int i = (100 / 7 + 1) * 7;
	while (i < 1000)
	{
		if ((i / 100 + (i - i / 100 * 100) / 10 + i % 10) % 7 == 0)
		{
			printf("%i\n", i);
		}
		 i+= 7;
	}
}

void task7()
{
//7.Перевести целое число из десятичной системы счисления в восьмеричную, используя алгоритм деления на 8.
	int n, b, k, c;
	printf("Введите число:");
	scanf_s("%d", &n);
	k = 1;
	c = 0;
	while (n > 0)
	{
		b = n % 8; 
		n /= 8; 
		c += b * pow(10, k - 1); 
		b = 0;   
		k++; 
	}
	printf("Восьмеричная система %d\n", c);
}

int main()
{
	setlocale(LC_ALL, "");
	srand(time(NULL));
	int task;
	int flag;
start:
	printf("Введите номер задания: ");
	scanf_s("%d", &task);
	switch (task)
	{
	case 1: {task1(); }break;
	case 2: {task2(); }break;
	case 3: {task3(); }break;
	case 4: {task4(); }break;
	case 5: {task5(); }break;
	case 6: {task6(); }break;
	case 7: {task7(); }break;
	default:
		break;
	}
	printf("Если хотите продолжить нажмите 1!");
	scanf_s("%d", &flag);
	if (flag==1)
	{
		goto start;
	}
	system("pause");
}
